{"version":3,"file":"static/js/779.b148a3a3.chunk.js","mappings":"wPAEMA,EAAmBC,EAAAA,GAAAA,IAAH,2CACT,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGRC,EAAcJ,EAAAA,GAAAA,GAAH,wFAGJ,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IAGRE,EAAcL,EAAAA,GAAAA,GAAH,4FACG,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,IACF,SAAAF,GAAC,OAAIA,EAAEC,MAAMI,QAAQC,MAApB,IAGdC,EAAgBR,EAAAA,GAAAA,GAAH,kDACC,SAAAC,GAAC,OAAIA,EAAEC,MAAMC,MAAM,EAAlB,I,SCwBrB,EA/BgB,WAAO,IAAD,EACZM,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,CAAC,GAAxC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4CF,EAAAA,EAAAA,UAAS,IAArD,eAAOG,EAAP,KAAuBC,EAAvB,KAUA,OARAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,IAAaR,GAASS,KAAKL,EAC5B,GAAE,CAACJ,KAEJO,EAAAA,EAAAA,YAAU,WACRD,EAAkBH,EAAQO,QAC3B,GAAE,CAACP,EAAQO,WAGV,SAACpB,EAAD,WACiB,OAAde,QAAc,IAAdA,OAAA,EAAAA,EAAgBM,QAAS,GACxB,SAAChB,EAAD,oBACGQ,EAAQO,eADX,aACG,EAAiBE,KAAI,gBAAGC,EAAH,EAAGA,OAAQC,EAAX,EAAWA,QAASC,EAApB,EAAoBA,GAApB,OACpB,UAACnB,EAAD,YACE,SAACG,EAAD,4BAA2Bc,MAC3B,uBAAIC,MAFYC,EADE,MAQxB,6CAIP,C,iMCtCKC,EAAM,mCACNC,EAAU,gCAGVC,EAAiB,mCAAG,mGAClBC,EADkB,UACTF,GADS,OAFG,qBAEH,oBACiCD,GADjC,SAeDI,EAAAA,EAAAA,IAAUD,GAfT,uBAehBE,EAfgB,EAehBA,KAfgB,SAgBEA,EAhBF,uBAgBhBX,EAhBgB,EAgBhBA,QAhBgB,kBAiBjBA,GAjBiB,4CAAH,qDAoBjBY,EAAc,mCAAG,WAAMtB,GAAN,kFACfmB,EADe,UACNF,EADM,iBACUjB,EADV,oBAC6BgB,EAD7B,4BAEEI,EAAAA,EAAAA,IAAUD,GAFZ,uBAEbE,EAFa,EAEbA,KAFa,kBAIdA,GAJc,2CAAH,sDAOdE,EAAa,mCAAG,WAAMvB,GAAN,kFACdmB,EADc,UACLF,EADK,iBACWjB,EADX,4BACsCgB,EADtC,4BAEGI,EAAAA,EAAAA,IAAUD,GAFb,uBAEZE,EAFY,EAEZA,KAFY,kBAGbA,GAHa,2CAAH,sDAMbb,EAAY,mCAAG,WAAMR,GAAN,kFACbmB,EADa,UACJF,EADI,iBACYjB,EADZ,4BACuCgB,EADvC,mCAEII,EAAAA,EAAAA,IAAUD,GAFd,uBAEXE,EAFW,EAEXA,KAFW,kBAGZA,GAHY,2CAAH,sDAMZG,EAAiB,mCAAG,WAAMC,GAAN,kFAClBN,EADkB,UACTF,EADS,gCACsBD,EADtB,iCACkDS,EADlD,wCAEDL,EAAAA,EAAAA,IAAUD,GAFT,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH,qD","sources":["components/Reviews/Reviews.styled.js","components/Reviews/Reviews.jsx","utils/Api.js"],"sourcesContent":["import styled from 'styled-components';\n\nconst ReviewsContainer = styled.div`\n  padding: ${p => p.theme.space[3]}px;\n`;\n\nconst ReviewsList = styled.ul`\n  display: flex;\n  flex-direction: column;\n  row-gap: ${p => p.theme.space[4]}px;\n`;\n\nconst ReviewsItem = styled.li`\n  padding-bottom: ${p => p.theme.space[3]}px;\n  border-bottom: ${p => p.theme.borders.normal} rgba(0, 0, 0, 0.2);\n`;\n\nconst ReviewsAuthor = styled.h3`\n  padding-bottom: ${p => p.theme.space[4]}px;\n`;\n\nexport { ReviewsContainer, ReviewsList, ReviewsItem, ReviewsAuthor };\n","import { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchReviews } from 'utils/Api';\n\nimport {\n  ReviewsContainer,\n  ReviewsList,\n  ReviewsItem,\n  ReviewsAuthor,\n} from './Reviews.styled';\n\nconst Reviews = () => {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState({});\n  const [reviewsResults, setReviewsResults] = useState([]);\n\n  useEffect(() => {\n    fetchReviews(movieId).then(setReviews);\n  }, [movieId]);\n\n  useEffect(() => {\n    setReviewsResults(reviews.results);\n  }, [reviews.results]);\n\n  return (\n    <ReviewsContainer>\n      {reviewsResults?.length > 0 ? (\n        <ReviewsList>\n          {reviews.results?.map(({ author, content, id }) => (\n            <ReviewsItem key={id}>\n              <ReviewsAuthor>{`Author: ${author}`}</ReviewsAuthor>\n              <p>{content}</p>\n            </ReviewsItem>\n          ))}\n        </ReviewsList>\n      ) : (\n        'We do not have any reviews for this movie'\n      )}\n    </ReviewsContainer>\n  );\n};\n\nexport default Reviews;\n","import axios from 'axios';\n\nconst KEY = 'fc3059b93409f1f02abdc6e15de200bc';\nconst baseUrl = 'https://api.themoviedb.org/3/';\nconst popularFilmsOfDayUrl = 'trending/movie/day';\n\nconst fetchPopularFilms = async () => {\n  const url = `${baseUrl}${popularFilmsOfDayUrl}?api_key=${KEY}`;\n\n  //===============Use fetch=================================================\n  //   return fetch(url)\n  //     .then(resp => resp.json())\n  //     .then(parsed => parsed.results);\n\n  //=============Use axios===================================================\n  //   const resp = await axios.get(url);\n  //   const data = await resp.data;\n  //   const results = data.results;\n  //   return results;\n\n  //=============Use axios with destructuring==================================================\n  const { data } = await axios.get(url);\n  const { results } = await data;\n  return results;\n};\n\nconst fetchMovieById = async movieId => {\n  const url = `${baseUrl}movie/${movieId}?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n\n  return data;\n};\n\nconst fetchCastById = async movieId => {\n  const url = `${baseUrl}movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nconst fetchReviews = async movieId => {\n  const url = `${baseUrl}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nconst fetchMovieByQuery = async query => {\n  const url = `${baseUrl}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport {\n  fetchPopularFilms,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviews,\n  fetchMovieByQuery,\n};\n"],"names":["ReviewsContainer","styled","p","theme","space","ReviewsList","ReviewsItem","borders","normal","ReviewsAuthor","movieId","useParams","useState","reviews","setReviews","reviewsResults","setReviewsResults","useEffect","fetchReviews","then","results","length","map","author","content","id","KEY","baseUrl","fetchPopularFilms","url","axios","data","fetchMovieById","fetchCastById","fetchMovieByQuery","query"],"sourceRoot":""}