{"version":3,"file":"static/js/701.5c78e0b3.chunk.js","mappings":"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","sources":["components/Box.js","components/MovieForm/MovieForm.styled.js","components/MovieForm/MovieForm.jsx","components/MovieList/MovieList.styled.js","components/MovieList/MovieList.jsx","pages/Movies.jsx","utils/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  space,\n  color,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  space,\n  color,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography\n);\n","import styled from 'styled-components';\n\nconst Input = styled.input`\n  width: 256px;\n  margin-bottom: ${p => p.theme.space[4]}px;\n  border-radius: 4px;\n  outline: none;\n  border: 2px solid rgba(33, 33, 33, 0.2);\n\n  &:focus {\n    border-color: ${p => p.theme.colors.accent};\n  }\n`;\n\nconst Button = styled.button`\n  border: 2px solid rgba(33, 33, 33, 0.2);\n  border-radius: 4px;\n  cursor: pointer;\n\n  &:hover,\n  &:focus {\n    opacity: 0.8;\n  }\n`;\n\nexport { Input, Button };\n","import { Input, Button } from './MovieForm.styled';\n\nconst MovieForm = ({ onSubmit }) => {\n  return (\n    <form onSubmit={onSubmit}>\n      <Input type=\"text\" name=\"query\" />\n      <Button type=\"submit\">Search</Button>\n    </form>\n  );\n};\n\nexport default MovieForm;\n","import styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\n\nconst List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 20px;\n  padding: 20px;\n`;\n\nconst Item = styled.li`\n  flex-basis: calc((100% - 3 * 20px) / 4);\n  display: flex;\n  flex-direction: column;\n  column-gap: ${p => p.theme.space[2]}px;\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  border-radius: 4px;\n  transition: scale 200ms ease-in;\n\n  &:hover {\n    scale: 1.1;\n  }\n`;\n\nconst Img = styled.img`\n  width: 100%;\n  border-radius: 4px;\n`;\n\nconst StyledLink = styled(NavLink)`\n  font-size: ${p => p.theme.fontSizes.m}px;\n  color: ${p => p.theme.colors.textSecond};\n  text-decoration: ${p => p.theme.borders.none};\n`;\n\nconst Wrapper = styled.div`\n  display: flex;\n  align-items: center;\n  padding-top: 8px;\n  padding-bottom: 8px;\n  min-width: 100%;\n  background-color: white;\n`;\n\nexport { StyledLink, Item, List, Wrapper, Img };\n","import {\n  StyledLink,\n  Item,\n  List,\n  Wrapper,\n  Img,\n} from 'components/MovieList/MovieList.styled';\nimport { GiFilmStrip } from 'react-icons/gi';\n\nconst MovieList = ({ queryNames, location }) => {\n  return (\n    <div>\n      <List>\n        {queryNames?.map(({ id, original_title, poster_path }) => (\n          <Item key={id}>\n            <StyledLink to={`${id}`} state={{ from: location }}>\n              <Img\n                src={`https://image.tmdb.org/t/p/w300${poster_path}`}\n                alt={original_title}\n              />\n              <Wrapper>\n                <GiFilmStrip />\n                <p>{original_title}</p>\n              </Wrapper>\n            </StyledLink>\n          </Item>\n        ))}\n      </List>\n    </div>\n  );\n};\n\nexport default MovieList;\n","import { useEffect, useState } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { useSearchParams } from 'react-router-dom';\n\nimport { fetchMovieByQuery } from 'utils/Api';\n\nimport { Box } from 'components/Box';\n\nimport MovieForm from 'components/MovieForm/MovieForm';\nimport MovieList from 'components/MovieList/MovieList';\n\nconst Movies = () => {\n  const location = useLocation();\n  const [queryNames, setQueryName] = useState([]);\n  const [searchParams, setSearchParams] = useSearchParams();\n  const query = searchParams.get('query');\n\n  useEffect(() => {\n    if (query === null) return;\n\n    fetchMovieByQuery(query)\n      .then(r => setQueryName(r.results))\n      .catch(error => console.log(error.message));\n  }, [query]);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    const form = e.currentTarget;\n    setSearchParams({ query: form.elements.query.value });\n    form.reset();\n  };\n\n  return (\n    <Box p={4}>\n      <MovieForm onSubmit={handleSubmit} />\n      <MovieList queryNames={queryNames} location={location} />\n    </Box>\n  );\n};\n\nexport default Movies;\n","import axios from 'axios';\n\nconst KEY = 'fc3059b93409f1f02abdc6e15de200bc';\nconst baseUrl = 'https://api.themoviedb.org/3/';\nconst popularFilmsOfDayUrl = 'trending/movie/day';\n\nconst fetchPopularFilms = async () => {\n  const url = `${baseUrl}${popularFilmsOfDayUrl}?api_key=${KEY}`;\n\n  //===============Use fetch=================================================\n  //   return fetch(url)\n  //     .then(resp => resp.json())\n  //     .then(parsed => parsed.results);\n\n  //=============Use axios===================================================\n  //   const resp = await axios.get(url);\n  //   const data = await resp.data;\n  //   const results = data.results;\n  //   return results;\n\n  //=============Use axios with destructuring==================================================\n  const { data } = await axios.get(url);\n  const { results } = await data;\n  return results;\n};\n\nconst fetchMovieById = async movieId => {\n  const url = `${baseUrl}movie/${movieId}?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n\n  return data;\n};\n\nconst fetchCastById = async movieId => {\n  const url = `${baseUrl}movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nconst fetchReviews = async movieId => {\n  const url = `${baseUrl}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nconst fetchMovieByQuery = async query => {\n  const url = `${baseUrl}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport {\n  fetchPopularFilms,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviews,\n  fetchMovieByQuery,\n};\n"],"names":["Box","styled","space","color","layout","flexbox","grid","background","border","position","shadow","typography","Input","p","theme","colors","accent","Button","onSubmit","type","name","List","Item","Img","StyledLink","NavLink","fontSizes","m","textSecond","borders","none","Wrapper","queryNames","location","map","id","original_title","poster_path","to","state","from","src","alt","useLocation","useState","setQueryName","useSearchParams","searchParams","setSearchParams","query","get","useEffect","fetchMovieByQuery","then","r","results","catch","error","console","log","message","e","preventDefault","form","currentTarget","elements","value","reset","KEY","baseUrl","fetchPopularFilms","url","axios","data","fetchMovieById","movieId","fetchCastById","fetchReviews"],"sourceRoot":""}