{"version":3,"file":"static/js/946.faef2d9c.chunk.js","mappings":"8LAcaA,GAAMC,EAAAA,EAAAA,IAAO,MAAPA,CACjBC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,GACAC,EAAAA,G,4JCpBIC,EAAQX,EAAAA,GAAAA,GAAH,iEACA,SAAAY,GAAC,OAAIA,EAAEC,MAAMC,OAAOC,IAAnB,IACQ,SAAAH,GAAC,OAAIA,EAAEC,MAAMZ,MAAM,EAAlB,IAGfe,EAAOhB,EAAAA,GAAAA,GAAH,yIAGM,SAAAY,GAAC,OAAIA,EAAEC,MAAMZ,MAAM,EAAlB,IAIJ,SAAAW,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,MAAnB,IAIRC,GAAalB,EAAAA,EAAAA,IAAOmB,EAAAA,GAAPnB,CAAH,sIACD,SAAAY,GAAC,OAAIA,EAAEC,MAAMO,UAAUC,CAAtB,IACL,SAAAT,GAAC,OAAIA,EAAEC,MAAMC,OAAOQ,UAAnB,IACS,SAAAV,GAAC,OAAIA,EAAEC,MAAMU,QAAQC,IAApB,IAIT,SAAAZ,GAAC,OAAIA,EAAEC,MAAMC,OAAOG,MAAnB,I,iBCQd,EA3Ba,WACX,IAAMQ,GAAWC,EAAAA,EAAAA,MACjB,GAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KAQA,OANAC,EAAAA,EAAAA,YAAU,YACRC,EAAAA,EAAAA,MACGC,KAAKH,GACLI,OAAM,SAAAC,GAAK,OAAIC,QAAQC,IAAIF,EAAMG,QAAtB,GACf,GAAE,KAGD,UAACtC,EAAA,EAAD,CAAKa,EAAG,EAAR,WACE,SAACD,EAAD,8BACA,SAACZ,EAAA,EAAD,CAAKuC,GAAI,KAAMC,QAAQ,OAAOC,cAAc,SAASC,WAAY,EAAjE,SACGb,EAAOc,KAAI,gBAAGC,EAAH,EAAGA,MAAOC,EAAV,EAAUA,GAAV,OACV,UAAC5B,EAAD,YACE,SAAC,MAAD,KACA,SAACE,EAAD,CAAY2B,GAAE,iBAAYD,GAAME,MAAO,CAAEC,KAAMtB,GAA/C,SACGkB,MAHMC,EADD,QAWnB,C,iMC/BKI,EAAM,mCACNC,EAAU,gCAGVlB,EAAiB,mCAAG,mGAClBmB,EADkB,UACTD,GADS,OAFG,qBAEH,oBACiCD,GADjC,SAeDG,EAAAA,EAAAA,IAAUD,GAfT,uBAehBE,EAfgB,EAehBA,KAfgB,SAgBEA,EAhBF,uBAgBhBC,EAhBgB,EAgBhBA,QAhBgB,kBAiBjBA,GAjBiB,4CAAH,qDAoBjBC,EAAc,mCAAG,WAAMC,GAAN,kFACfL,EADe,UACND,EADM,iBACUM,EADV,oBAC6BP,EAD7B,4BAEEG,EAAAA,EAAAA,IAAUD,GAFZ,uBAEbE,EAFa,EAEbA,KAFa,kBAIdA,GAJc,2CAAH,sDAOdI,EAAa,mCAAG,WAAMD,GAAN,kFACdL,EADc,UACLD,EADK,iBACWM,EADX,4BACsCP,EADtC,4BAEGG,EAAAA,EAAAA,IAAUD,GAFb,uBAEZE,EAFY,EAEZA,KAFY,kBAGbA,GAHa,2CAAH,sDAMbK,EAAY,mCAAG,WAAMF,GAAN,kFACbL,EADa,UACJD,EADI,iBACYM,EADZ,4BACuCP,EADvC,mCAEIG,EAAAA,EAAAA,IAAUD,GAFd,uBAEXE,EAFW,EAEXA,KAFW,kBAGZA,GAHY,2CAAH,sDAMZM,EAAiB,mCAAG,WAAMC,GAAN,kFAClBT,EADkB,UACTD,EADS,gCACsBD,EADtB,iCACkDW,EADlD,wCAEDR,EAAAA,EAAAA,IAAUD,GAFT,uBAEhBE,EAFgB,EAEhBA,KAFgB,kBAGjBA,GAHiB,2CAAH,qD","sources":["components/Box.js","pages/Home.styled.js","pages/Home.jsx","utils/Api.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  space,\n  color,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography,\n} from 'styled-system';\n\nexport const Box = styled('div')(\n  space,\n  color,\n  layout,\n  flexbox,\n  grid,\n  background,\n  border,\n  position,\n  shadow,\n  typography\n);\n","import styled from 'styled-components';\n\nimport { NavLink } from 'react-router-dom';\n\nconst Title = styled.h2`\n  color: ${p => p.theme.colors.text};\n  padding-bottom: ${p => p.theme.space[3]}px;\n`;\n\nconst Item = styled.li`\n  display: flex;\n  align-items: center;\n  column-gap: ${p => p.theme.space[2]}px;\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nconst StyledLink = styled(NavLink)`\n  font-size: ${p => p.theme.fontSizes.m}px;\n  color: ${p => p.theme.colors.textSecond};\n  text-decoration: ${p => p.theme.borders.none};\n\n  &:hover,\n  &:focus {\n    color: ${p => p.theme.colors.accent};\n  }\n`;\n\nexport { StyledLink, Title, Item };\n","import { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router-dom';\nimport { GiFilmStrip } from 'react-icons/gi';\nimport { Box } from 'components/Box';\nimport { StyledLink, Title, Item } from './Home.styled';\n\nimport { fetchPopularFilms } from 'utils/Api';\n\nconst Home = () => {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchPopularFilms()\n      .then(setMovies)\n      .catch(error => console.log(error.message));\n  }, []);\n\n  return (\n    <Box p={4}>\n      <Title>Trending today</Title>\n      <Box as={'ul'} display=\"flex\" flexDirection=\"column\" gridRowGap={2}>\n        {movies.map(({ title, id }) => (\n          <Item key={id}>\n            <GiFilmStrip />\n            <StyledLink to={`movies/${id}`} state={{ from: location }}>\n              {title}\n            </StyledLink>\n          </Item>\n        ))}\n      </Box>\n    </Box>\n  );\n};\n\nexport default Home;\n","import axios from 'axios';\n\nconst KEY = 'fc3059b93409f1f02abdc6e15de200bc';\nconst baseUrl = 'https://api.themoviedb.org/3/';\nconst popularFilmsOfDayUrl = 'trending/movie/day';\n\nconst fetchPopularFilms = async () => {\n  const url = `${baseUrl}${popularFilmsOfDayUrl}?api_key=${KEY}`;\n\n  //===============Use fetch=================================================\n  //   return fetch(url)\n  //     .then(resp => resp.json())\n  //     .then(parsed => parsed.results);\n\n  //=============Use axios===================================================\n  //   const resp = await axios.get(url);\n  //   const data = await resp.data;\n  //   const results = data.results;\n  //   return results;\n\n  //=============Use axios with destructuring==================================================\n  const { data } = await axios.get(url);\n  const { results } = await data;\n  return results;\n};\n\nconst fetchMovieById = async movieId => {\n  const url = `${baseUrl}movie/${movieId}?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n\n  return data;\n};\n\nconst fetchCastById = async movieId => {\n  const url = `${baseUrl}movie/${movieId}/credits?api_key=${KEY}&language=en-US`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nconst fetchReviews = async movieId => {\n  const url = `${baseUrl}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nconst fetchMovieByQuery = async query => {\n  const url = `${baseUrl}search/movie?api_key=${KEY}&language=en-US&query=${query}&page=1&include_adult=false`;\n  const { data } = await axios.get(url);\n  return data;\n};\n\nexport {\n  fetchPopularFilms,\n  fetchMovieById,\n  fetchCastById,\n  fetchReviews,\n  fetchMovieByQuery,\n};\n"],"names":["Box","styled","space","color","layout","flexbox","grid","background","border","position","shadow","typography","Title","p","theme","colors","text","Item","accent","StyledLink","NavLink","fontSizes","m","textSecond","borders","none","location","useLocation","useState","movies","setMovies","useEffect","fetchPopularFilms","then","catch","error","console","log","message","as","display","flexDirection","gridRowGap","map","title","id","to","state","from","KEY","baseUrl","url","axios","data","results","fetchMovieById","movieId","fetchCastById","fetchReviews","fetchMovieByQuery","query"],"sourceRoot":""}